<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<l>dev_update_off ()</l>
<l>dev_close_window ()</l>
<c>*使用变形后的数据训练的网络</c>
<l>*read_ocr_class_mlp ('ocrmlp_change.omc', OCRHandle)</l>
<c>*使用没变形的数据训练的网络</c>
<l>fileadd:='G:/我的地盘/毕设用/AA毕设\'s/模糊矿车图片/'</l>
<l>read_ocr_class_mlp ('ocrmlp.omc', OCRHandle)</l>
<l>list_files('G:/我的地盘/毕设用/AA毕设\'s/矿车图片测试用', ['files','follow_links'], ImageFiles)  </l>
<l>tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima)$','ignore_case'], ImageFiles)  </l>
<l>for imgIndex := 0 to |ImageFiles| - 1 by 1</l>
<l>    read_image (Image, ImageFiles[imgIndex])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">*读取矿车和模板图片</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">*read_image (Image, 'G:/我的地盘/毕设用/AA毕设\'s/矿车上牌4.png')</l>
<c></c>
<l>dev_open_window_fit_image (Image, 0, 0, -1, -1, WindowHandle)</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_color ('red')</l>
<l>dev_set_line_width (3)</l>
<l>set_display_font (WindowHandle, 40, 'mono', 'true', 'false')</l>
<c>*获取运动模糊后的图像</c>
<l>simulate_motion (Image, MovedImage, 40, 0, 3)</l>
<c></c>
<c>*获取维纳滤波后的图像</c>
<l>get_image_size (MovedImage, Width1, Height1)</l>
<l>gen_psf_motion(psf,Width1,Height1,40,0,3)</l>
<l>median_image(MovedImage,noisefiltered,'circle',1,0)</l>
<l>wiener_filter (MovedImage, psf, noisefiltered, RestoredImage)</l>
<l>median_image(RestoredImage,RestoredImage1,'circle',1,0)</l>
<c></c>
<c>* RGB转换HSV</c>
<l>decompose3(RestoredImage1,R,G,B)</l>
<l>rgb1_to_gray (RestoredImage1, GrayImage1)</l>
<l>trans_from_rgb(R,G,B,H,S,V,'hsv')</l>
<l>compose3 (H, S, V, MultiChannelImage)</l>
<c>*获取车牌区域</c>
<l>threshold (V, Regions, 109, 295)</l>
<l>connection (Regions, ConnectedRegions)</l>
<l>select_shape (ConnectedRegions, SelectedRegions, ['area','rectangularity'], 'and', [0,0.88165], [75688.1,1])</l>
<l>fill_up (SelectedRegions, RegionFillUp)</l>
<l>shape_trans (RegionFillUp, RegionTrans, 'rectangle2')</l>
<l>reduce_domain (RestoredImage, RegionTrans, ImageReduced)</l>
<l>crop_domain (ImageReduced, ImagePart)</l>
<c></c>
<c>*分割车牌字体</c>
<l>rgb1_to_gray (ImagePart, GrayImage)</l>
<l>convert_image_type (GrayImage, GrayImage, 'byte')</l>
<c>*138,255</c>
<l>threshold (GrayImage, Regions2, 138, 255)</l>
<l>*count_seconds (t1)</l>
<c>*mlp识别</c>
<l>dilation_rectangle1 (Regions2, RegionDilation, 4, 10)</l>
<l>connection (RegionDilation, ConnectedRegions2)</l>
<l>intersection (ConnectedRegions2, Regions2, RegionIntersection)</l>
<l>select_shape (RegionIntersection, SelectedRegions1, 'area', 'and', 92.66, 1000)</l>
<c></c>
<l>sort_region (SelectedRegions1, SortedRegions, 'first_point', 'true', 'column')</l>
<l>* count_obj (SortedRegions, Number)</l>
<l>* fileadd:='G:/我的地盘/毕设用/AA毕设\'s/测试集图片/'</l>
<l>* for h:=0 to Number-1 by 1</l>
<l>*       name := h%15+imgIndex*5</l>
<l>*       select_obj (SortedRegions, Region, h+1)</l>
<l>*       shape_trans (Region, RegionTrans, 'rectangle1')</l>
<l>*       reduce_domain (GrayImage, RegionTrans, ImageReduced)</l>
<l>*       crop_domain (ImageReduced, ImagePart)</l>
<l>*       zoom_image_size (ImagePart, ImageZoom, 30,30, 'bilinear')</l>
<l>*       write_image (ImageZoom, 'bmp',0, fileadd+name)</l>
<c></c>
<l>*  endfor</l>
<l>do_ocr_multi_class_mlp(SortedRegions, GrayImage, OCRHandle, Class, Confidence)</l>
<l>*count_seconds (t2)</l>
<l>dev_clear_window ()</l>
<l>dev_display (Image)</l>
<l>dev_display (MovedImage)</l>
<l>dev_display (RestoredImage)</l>
<l>dev_display (RegionTrans)</l>
<l>* convert_image_type (MovedImage, ImageConverted, 'byte')</l>
<l>* write_image (ImageConverted, 'bmp',0, fileadd+Class[0]+Class[1]+Class[2]+Class[3]+Class[4])</l>
<l>disp_message (WindowHandle, '车牌号：', 'window', 20, 20, 'red', 'false')</l>
<l>for i:= 0 to |Class|-1 by 1</l>
<l>     disp_message (WindowHandle, Class[i], 'window', 20, 260+40*i, 'red', 'false')</l>
<l>endfor</l>
<l>*disp_message (WindowHandle, t2-t1, 'window', 20, 260+40*5, 'red', 'false')</l>
<l>stop()</l>
<l>endfor</l>
<l>clear_ocr_class_mlp (OCRHandle)</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
